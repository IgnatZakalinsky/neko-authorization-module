{"version":3,"sources":["neko-2-features/f-1-authorization/a-1-sign-in/s-2-bll/b-2-redux/signInInitialState.ts","neko-2-features/f-1-authorization/a-1-sign-in/s-2-bll/b-2-redux/signInActions.ts","neko-2-features/f-1-authorization/a-2-register/r-2-bll/b-2-redux/registerInitialState.ts","neko-2-features/f-1-authorization/a-2-register/r-2-bll/b-2-redux/registerActions.ts","neko-2-features/f-1-authorization/a-3-forgot/f-2-bll/b-2-redux/forgotInitialState.ts","neko-2-features/f-1-authorization/a-3-forgot/f-2-bll/b-2-redux/forgotActions.ts","neko-2-features/f-4-social/s-1-neko/n-2-bll/b-2-redux/nekoInitialState.ts","neko-2-features/f-4-social/s-1-neko/n-2-bll/b-2-redux/nekoActions.ts","neko-2-features/f-3-common/c-1-boolean-reducer/booleanInitialState.ts","neko-2-features/f-3-common/c-1-boolean-reducer/booleanActions.ts","neko-1-main/m-2-bll/store.ts","neko-2-features/f-1-authorization/a-1-sign-in/s-2-bll/b-2-redux/signInReducer.ts","neko-2-features/f-1-authorization/a-2-register/r-2-bll/b-2-redux/registerReducer.ts","neko-2-features/f-1-authorization/a-3-forgot/f-2-bll/b-2-redux/forgotReducer.ts","neko-2-features/f-3-common/c-1-boolean-reducer/booleanReducer.ts","neko-2-features/f-4-social/s-1-neko/n-2-bll/b-2-redux/nekoReducer.ts","neko-2-features/f-3-common/c-1-boolean-reducer/booleanCallbacks.ts","neko-2-features/f-1-authorization/a-1-sign-in/s-2-bll/b-1-callbacks/signInBooleanCallbacks.ts","neko-2-features/f-3-common/c-1-boolean-reducer/useBooleanSelectors.ts","base-url.ts","neko-2-features/f-4-social/s-1-neko/n-3-dal/NekoAPI.ts","neko-2-features/f-2-helpers/h-1-authorization/cookies.ts","neko-2-features/f-4-social/s-1-neko/n-2-bll/b-1-callbacks/nekoBooleanCallbacks.ts","neko-2-features/f-4-social/s-1-neko/n-2-bll/nekoThunks.ts","neko-2-features/f-2-helpers/h-1-authorization/emailValidator.ts","neko-2-features/f-2-helpers/h-1-authorization/passwordValidator.ts","neko-2-features/f-1-authorization/a-1-sign-in/s-3-dal/SignInAPI.ts","neko-2-features/f-2-helpers/h-1-authorization/passwordCoding.tsx","neko-2-features/f-1-authorization/a-1-sign-in/s-2-bll/b-1-callbacks/signInCallBacks.ts","neko-2-features/f-1-authorization/a-1-sign-in/s-2-bll/signInThunk.ts","neko-2-features/f-1-authorization/a-1-sign-in/s-2-bll/b-1-callbacks/useSignInContainerLogic.ts","neko-2-features/f-1-authorization/a-1-sign-in/s-2-bll/b-1-callbacks/useSignInLocalState.ts","neko-3-styles/flex-containers.ts","neko-2-features/f-1-authorization/a-1-sign-in/s-1-ui/SignIn.tsx","neko-2-features/f-4-social/s-1-neko/n-2-bll/b-1-callbacks/nekoCallBacks.ts","neko-2-features/f-1-authorization/a-1-sign-in/s-1-ui/Disconnect.tsx","neko-2-features/f-1-authorization/a-1-sign-in/s-1-ui/SignInContainer.tsx","neko-2-features/f-1-authorization/a-1-sign-in/s-1-ui/SignInPage.tsx","neko-2-features/f-1-authorization/a-2-register/r-2-bll/b-1-callbacks/registerBooleanCallbacks.ts","neko-2-features/f-1-authorization/a-2-register/r-3-dal/RegisterAPI.ts","neko-2-features/f-1-authorization/a-2-register/r-2-bll/b-1-callbacks/registerCallBacks.ts","neko-2-features/f-1-authorization/a-2-register/r-2-bll/registerThunk.ts","neko-2-features/f-1-authorization/a-2-register/r-2-bll/b-1-callbacks/useRegisterContainerLogic.ts","neko-2-features/f-1-authorization/a-2-register/r-2-bll/b-1-callbacks/useRegisterLocalState.ts","neko-2-features/f-1-authorization/a-2-register/r-1-ui/Register.tsx","neko-2-features/f-1-authorization/a-2-register/r-1-ui/RegisterContainer.tsx","neko-2-features/f-1-authorization/a-2-register/r-1-ui/RegisterPage.tsx","neko-2-features/f-1-authorization/a-3-forgot/f-2-bll/b-1-callbacks/forgotBooleanCallbacks.ts","neko-2-features/f-1-authorization/a-3-forgot/f-3-dal/ForgotAPI.ts","neko-2-features/f-1-authorization/a-3-forgot/f-2-bll/b-1-callbacks/forgotCallBacks.ts","neko-2-features/f-1-authorization/a-3-forgot/f-2-bll/forgotThunk.ts","neko-2-features/f-1-authorization/a-3-forgot/f-2-bll/b-1-callbacks/useForgotContainerLogic.ts","neko-2-features/f-1-authorization/a-3-forgot/f-2-bll/b-1-callbacks/useForgotLocalState.ts","neko-2-features/f-1-authorization/a-3-forgot/f-1-ui/Forgot.tsx","neko-2-features/f-1-authorization/a-3-forgot/f-1-ui/ForgotContainer.tsx","neko-2-features/f-1-authorization/a-3-forgot/f-1-ui/ForgotPage.tsx","neko-2-features/f-4-social/s-1-neko/n-2-bll/b-1-callbacks/useNekoContainerLogic.ts","neko-2-features/f-4-social/s-1-neko/n-2-bll/b-1-callbacks/useNekoLocalState.ts","neko-2-features/f-4-social/s-1-neko/n-1-ui/Neko.tsx","neko-2-features/f-4-social/s-1-neko/n-1-ui/NekoContainer.tsx","neko-2-features/f-4-social/s-1-neko/n-1-ui/NekoPage.tsx","neko-2-features/f-1-authorization/a-4-set-new-pass/s-1-ui/SetNewPass.tsx","neko-2-features/f-1-authorization/a-4-set-new-pass/s-2-bll/b-2-redux/setNewPassActions.ts","neko-2-features/f-1-authorization/a-4-set-new-pass/s-2-bll/b-1-callbacks/setNewPassBooleanCallbacks.ts","neko-2-features/f-1-authorization/a-4-set-new-pass/s-3-dal/SetNewPassAPI.ts","neko-2-features/f-1-authorization/a-4-set-new-pass/s-2-bll/b-1-callbacks/setNewPassCallBacks.ts","neko-2-features/f-1-authorization/a-4-set-new-pass/s-2-bll/setNewPassThunk.ts","neko-2-features/f-1-authorization/a-4-set-new-pass/s-2-bll/b-1-callbacks/useSetNewPassContainerLogic.ts","neko-2-features/f-1-authorization/a-4-set-new-pass/s-2-bll/b-1-callbacks/useSetNewPassLocalState.ts","neko-2-features/f-1-authorization/a-4-set-new-pass/s-1-ui/SetNewPassContainer.tsx","neko-2-features/f-1-authorization/a-4-set-new-pass/s-1-ui/SetNewPassPage.tsx","neko-1-main/m-1-ui/Routes.tsx","neko-1-main/m-1-ui/Header.tsx","neko-1-main/m-1-ui/Main.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["signInInitialState","SIGN_IN_ACTION_NAMES","registerInitialState","REGISTER_ACTION_NAMES","forgotInitialState","FORGOT_ACTION_NAMES","nekoInitialState","name","NEKO_ACTION_NAMES","nekoSetName","type","booleanInitialState","booleans","booleanSetValue","reducers","combineReducers","signIn","state","action","register","forgot","newBooleans","map","stateB","findB","find","actionB","push","neko","store","createStore","applyMiddleware","thunkMiddleware","window","booleanLoading","dispatch","ACTION_NAMES","loading","value","data","booleanError","error","message","booleanSuccess","success","booleanClear","signInLoading","signInError","signInSuccess","signInClear","useBooleanSelector","names","useSelector","result","n","b","selectBooleans","instance","axios","create","baseURL","NekoAPI","getMe","token","a","post","response","setCookie","age","document","cookie","getCookie","matches","match","RegExp","replace","decodeURIComponent","nekoLoading","nekoError","nekoSuccess","nekoClear","getStore","console","log","Math","floor","tokenDeathTime","reg","emailValidator","email","test","passwordValidator","password","length","SignInAPI","rememberMe","passwordCoding","f","c","String","fromCharCode","charCodeAt","signInCallback","useSignInContainerLogic","useDispatch","useState","setEmail","setPassword","setRememberMe","redirect","setRedirect","setEmailCallback","emailC","setPasswordCallback","passwordC","setRememberMeCallback","rememberMeC","useSignInLocalState","useEffect","FlexStyle","display","FlexColumn","flexFlow","FlexAlignCenter","alignItems","FlexColumnAlignCenter","FlexColumnCenterCenter","justifyContent","FlexAlignCenterSpaceAround","FlexColumnAlignCenterSpaceAround","FlexAlignCenterSpaceAroundWrap","flexWrap","SignIn","style","height","color","onChange","e","currentTarget","to","FORGOT_PATH","checked","onClick","disabled","REGISTER_PATH","logoutCallback","Disconnect","NEKO_PATH","SignInContainer","setTimeout","SignInPage","registerLoading","registerError","registerSuccess","registerClear","RegisterAPI","registerCallback","password2","useRegisterContainerLogic","setPassword2","setPassword2Callback","password2C","useRegisterLocalState","Register","SIGN_IN_PATH","RegisterContainer","RegisterPage","forgotLoading","forgotError","forgotSuccess","forgotClear","ForgotAPI","forgotCallback","useForgotContainerLogic","useForgotLocalState","Forgot","ForgotContainer","ForgotPage","useNekoContainerLogic","show","setShow","useNekoLocalState","logout","Neko","NekoContainer","NekoPage","SetNewPass","password1","setPassword1Callback","setNewPass","SET_NEW_PASS_ACTION_NAMES","setNewPassLoading","setNewPassError","setNewPassSuccess","setNewPassClear","SetNewPassAPI","resetPasswordToken","setNewPassCallback","useSetNewPassContainerLogic","setPassword1","useSetNewPassLocalState","SetNewPassContainer","useParams","SetNewPassPage","Routes","exact","path","render","SET_NEW_PASS_PATH","Header","Main","App","className","Boolean","location","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b7b9b4ba.chunk.js","sourcesContent":["export interface ISignInState { // blank\r\n\r\n}\r\n\r\nexport const signInInitialState: ISignInState = { // blank\r\n\r\n};\r\n","export const SIGN_IN_LOADING = 'SIGN_IN/LOADING';\r\nexport const SIGN_IN_ERROR = 'SIGN_IN/ERROR';\r\nexport const SIGN_IN_SUCCESS = 'SIGN_IN/SUCCESS';\r\n\r\nexport const SIGN_IN_ACTION_NAMES = [SIGN_IN_LOADING, SIGN_IN_ERROR, SIGN_IN_SUCCESS];\r\n\r\nexport const SIGN_IN = 'SIGN_IN/SOME'; // blank\r\n\r\ninterface ISignInSome { // blank\r\n    type: typeof SIGN_IN;\r\n\r\n}\r\n\r\nexport type ISignInActions = ISignInSome;\r\n\r\nexport const signInSome = (): ISignInSome => ({ // blank\r\n    type: SIGN_IN,\r\n    \r\n});\r\n\r\n","export interface IRegisterState { // blank\r\n\r\n}\r\n\r\nexport const registerInitialState: IRegisterState = { // blank\r\n\r\n};\r\n","export const REGISTER_LOADING = 'REGISTER/LOADING';\r\nexport const REGISTER_ERROR = 'REGISTER/ERROR';\r\nexport const REGISTER_SUCCESS = 'REGISTER/SUCCESS';\r\n\r\nexport const REGISTER_ACTION_NAMES = [REGISTER_LOADING, REGISTER_ERROR, REGISTER_SUCCESS];\r\n\r\nexport const REGISTER = 'REGISTER/SOME';\r\n\r\ninterface IRegisterSome { // blank\r\n    type: typeof REGISTER;\r\n\r\n}\r\n\r\nexport type IRegisterActions = IRegisterSome;\r\n\r\nexport const registerSome = (): IRegisterSome => ({ // blank\r\n    type: REGISTER,\r\n\r\n});\r\n","export interface IForgotState { // blank\r\n\r\n}\r\n\r\nexport const forgotInitialState: IForgotState = { // blank\r\n\r\n};\r\n","export const FORGOT_LOADING = 'FORGOT/LOADING';\r\nexport const FORGOT_ERROR = 'FORGOT/ERROR';\r\nexport const FORGOT_SUCCESS = 'FORGOT/SUCCESS';\r\n\r\nexport const FORGOT_ACTION_NAMES = [FORGOT_LOADING, FORGOT_ERROR, FORGOT_SUCCESS];\r\n\r\nexport const FORGOT = 'FORGOT/SOME';\r\n\r\ninterface IForgotSome { // blank\r\n    type: typeof FORGOT;\r\n\r\n}\r\n\r\nexport type IForgotActions = IForgotSome;\r\n\r\nexport const forgotSome = (): IForgotSome => ({ // blank\r\n    type: FORGOT,\r\n\r\n});\r\n\r\n","export interface INekoState {\r\n    name: string;\r\n}\r\n\r\nexport const nekoInitialState: INekoState = {\r\n    name: '',\r\n};\r\n","export const NEKO_LOADING = 'NEKO/LOADING';\r\nexport const NEKO_ERROR = 'NEKO/ERROR';\r\nexport const NEKO_SUCCESS = 'NEKO/SUCCESS';\r\n\r\nexport const NEKO_ACTION_NAMES = [NEKO_LOADING, NEKO_ERROR, NEKO_SUCCESS];\r\n\r\nexport const NEKO_SET_NAME = 'NEKO/SET_NAME';\r\n\r\ninterface INekoSetName {\r\n    type: typeof NEKO_SET_NAME;\r\n    name: string;\r\n}\r\n\r\nexport type INekoActions = INekoSetName;\r\n\r\nexport const nekoSetName = (name: string): INekoSetName => ({\r\n    type: NEKO_SET_NAME,\r\n    name,\r\n});\r\n","export interface IBooleanDataObject {\r\n    message?: string;\r\n}\r\n\r\nexport interface IBooleanObject {\r\n    name: string;\r\n    value: boolean;\r\n    data: IBooleanDataObject;\r\n}\r\n\r\nexport interface IBooleanState {\r\n    booleans: IBooleanObject[];\r\n}\r\n\r\nexport const booleanInitialState: IBooleanState = {\r\n    booleans: [],\r\n};\r\n","import {IBooleanObject} from \"./booleanInitialState\";\r\n\r\nexport const BOOLEAN_SET_VALUE = 'BOOLEAN/SET_VALUE';\r\n\r\ninterface IBooleanSetValue {\r\n    type: typeof BOOLEAN_SET_VALUE;\r\n    booleans: IBooleanObject[];\r\n}\r\n\r\nexport type IBooleanActions = IBooleanSetValue;\r\n\r\nexport const booleanSetValue = (booleans: IBooleanObject[]): IBooleanSetValue => ({\r\n    type: BOOLEAN_SET_VALUE,\r\n    booleans,\r\n});\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport  thunkMiddleware from \"redux-thunk\"\r\nimport {signInReducer} from \"../../neko-2-features/f-1-authorization/a-1-sign-in/s-2-bll/b-2-redux/signInReducer\";\r\nimport {registerReducer} from \"../../neko-2-features/f-1-authorization/a-2-register/r-2-bll/b-2-redux/registerReducer\";\r\nimport {forgotReducer} from \"../../neko-2-features/f-1-authorization/a-3-forgot/f-2-bll/b-2-redux/forgotReducer\";\r\nimport {nekoReducer} from \"../../neko-2-features/f-4-social/s-1-neko/n-2-bll/b-2-redux/nekoReducer\";\r\nimport {booleanReducer} from \"../../neko-2-features/f-3-common/c-1-boolean-reducer/booleanReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    signIn: signInReducer,\r\n    register: registerReducer,\r\n    forgot: forgotReducer,\r\n\r\n    booleans: booleanReducer,\r\n\r\n    neko: nekoReducer,\r\n});\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store\r\n\r\nexport type IAppStore = ReturnType<typeof reducers>\r\n\r\n// @ts-ignore\r\nwindow.store = store; // for dev\r\n","import {signInInitialState} from \"./signInInitialState\";\r\nimport {ISignInActions, SIGN_IN} from \"./signInActions\";\r\n\r\nexport const signInReducer = (state = signInInitialState, action: ISignInActions) => {\r\n    switch (action.type) {\r\n        case SIGN_IN: { // blank\r\n            return {\r\n                ...state,\r\n\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n","import {registerInitialState} from \"./registerInitialState\";\r\nimport {IRegisterActions, REGISTER} from \"./registerActions\";\r\n\r\nexport const registerReducer = (state = registerInitialState, action: IRegisterActions) => {\r\n    switch (action.type) {\r\n        case REGISTER: { // blank\r\n            return {\r\n                ...state,\r\n\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n","import {forgotInitialState} from \"./forgotInitialState\";\r\nimport {IForgotActions, FORGOT} from \"./forgotActions\";\r\n\r\nexport const forgotReducer = (state = forgotInitialState, action: IForgotActions) => {\r\n    switch (action.type) {\r\n        case FORGOT: { // blank\r\n            return {\r\n                ...state,\r\n\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n","import {booleanInitialState} from \"./booleanInitialState\";\r\nimport {BOOLEAN_SET_VALUE, IBooleanActions} from \"./booleanActions\";\r\n\r\nexport const booleanReducer = (state = booleanInitialState, action: IBooleanActions) => {\r\n    switch (action.type) {\r\n        case BOOLEAN_SET_VALUE: {\r\n            const newBooleans = state.booleans.map(stateB => {\r\n                const findB = action.booleans.find(actionB => actionB.name === stateB.name);\r\n                return findB ? findB : stateB;\r\n            });\r\n            for (const actionB of action.booleans) {\r\n                if (!newBooleans.find(stateB => stateB.name === actionB.name)) {\r\n                    newBooleans.push(actionB);\r\n                }\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                booleans: newBooleans,\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n","import {nekoInitialState} from \"./nekoInitialState\";\r\nimport {INekoActions, NEKO_SET_NAME} from \"./nekoActions\";\r\n\r\nexport const nekoReducer = (state = nekoInitialState, action: INekoActions) => {\r\n    switch (action.type) {\r\n        case NEKO_SET_NAME: {\r\n            return {\r\n                ...state,\r\n                name: action.name,\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n","import {Dispatch} from \"redux\";\r\nimport {booleanSetValue} from \"./booleanActions\";\r\n\r\n// ACTION_NAMES == [loading, error, success]\r\n\r\nexport const booleanLoading = (dispatch: Dispatch, ACTION_NAMES: string[], loading: boolean) => {\r\n    dispatch(booleanSetValue([\r\n        {name: ACTION_NAMES[0], value: loading, data: {}},\r\n        {name: ACTION_NAMES[1], value: false, data: {}},\r\n        {name: ACTION_NAMES[2], value: false, data: {}},\r\n    ]))\r\n};\r\nexport const booleanError = (dispatch: Dispatch, ACTION_NAMES: string[], error: string) => {\r\n    dispatch(booleanSetValue([\r\n        {name: ACTION_NAMES[0], value: false, data: {}},\r\n        {name: ACTION_NAMES[1], value: true, data: {message: error}},\r\n        {name: ACTION_NAMES[2], value: false, data: {}},\r\n    ]))\r\n};\r\nexport const booleanSuccess = (dispatch: Dispatch, ACTION_NAMES: string[], success: boolean) => {\r\n    dispatch(booleanSetValue([\r\n        {name: ACTION_NAMES[0], value: false, data: {}},\r\n        {name: ACTION_NAMES[1], value: false, data: {}},\r\n        {name: ACTION_NAMES[2], value: success, data: {}},\r\n    ]))\r\n};\r\nexport const booleanClear = (dispatch: Dispatch, ACTION_NAMES: string[]) => {\r\n    dispatch(booleanSetValue([\r\n        {name: ACTION_NAMES[0], value: false, data: {}},\r\n        {name: ACTION_NAMES[1], value: false, data: {}},\r\n        {name: ACTION_NAMES[2], value: false, data: {}},\r\n    ]))\r\n};\r\n","import {Dispatch} from \"redux\";\r\nimport {\r\n    booleanClear,\r\n    booleanError,\r\n    booleanLoading,\r\n    booleanSuccess\r\n} from \"../../../../f-3-common/c-1-boolean-reducer/booleanCallbacks\";\r\nimport {SIGN_IN_ACTION_NAMES} from \"../b-2-redux/signInActions\";\r\n\r\nexport const signInLoading = (dispatch: Dispatch, loading: boolean) => {\r\n    booleanLoading(dispatch, SIGN_IN_ACTION_NAMES, loading);\r\n};\r\nexport const signInError = (dispatch: Dispatch, error: string) => {\r\n    booleanError(dispatch, SIGN_IN_ACTION_NAMES, error);\r\n};\r\nexport const signInSuccess = (dispatch: Dispatch, success: boolean) => {\r\n    booleanSuccess(dispatch, SIGN_IN_ACTION_NAMES, success);\r\n};\r\nexport const signInClear = (dispatch: Dispatch) => {\r\n    booleanClear(dispatch, SIGN_IN_ACTION_NAMES);\r\n};\r\n","import {useSelector} from \"react-redux\";\r\nimport {IAppStore} from \"../../../neko-1-main/m-2-bll/store\";\r\nimport {IBooleanObject} from \"./booleanInitialState\";\r\n\r\nexport const selectBooleans = (store: IAppStore, names: string[]): IBooleanObject[] => {\r\n    const result: IBooleanObject[] = [];\r\n    for (const n of names) {\r\n        result.push(store.booleans.booleans.find(b => b.name === n) || {name: n, value: false, data: {}});\r\n    }\r\n    return result;\r\n};\r\n\r\nexport const useBooleanSelector = (names: string[]): IBooleanObject[] => {\r\n    return useSelector((store: IAppStore) => selectBooleans(store, names));\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const baseURL = 'https://neko-cafe-back.herokuapp.com/';\r\n\r\nexport const instance = axios.create({\r\n    baseURL\r\n});\r\n","import {instance} from \"../../../../base-url\";\r\n\r\nexport interface IGetMeData {\r\n    name: string;\r\n    token: string;\r\n    tokenDeathTime: number;\r\n\r\n    error: string;\r\n}\r\n\r\nexport const NekoAPI = {\r\n    getMe: async (token: string) => {\r\n        const response = await instance.post<IGetMeData>('/auth/me', {token});\r\n        return response.data;\r\n    },\r\n\r\n};\r\n","export const setCookie = (name: string, value: string, age: number) => {\r\n    document.cookie = `${name}=${value};max-age=${age};path=/`;\r\n};\r\n\r\nexport const getCookie = (name: string): string | null => {\r\n    const matches = document.cookie.match(new RegExp(\r\n        '(?:^|; )' + name.replace(/([.$?*|{}()\\]\\\\^])/g, '\\\\$1') + '=([^;]*)'\r\n    ));\r\n    return matches ? decodeURIComponent(matches[1]) : null;\r\n};\r\n","import {Dispatch} from \"redux\";\r\nimport {\r\n    booleanLoading,\r\n    booleanError,\r\n    booleanSuccess,\r\n    booleanClear\r\n} from \"../../../../f-3-common/c-1-boolean-reducer/booleanCallbacks\";\r\nimport {NEKO_ACTION_NAMES} from \"../b-2-redux/nekoActions\";\r\n\r\nexport const nekoLoading = (dispatch: Dispatch, loading: boolean) => {\r\n    booleanLoading(dispatch, NEKO_ACTION_NAMES, loading);\r\n};\r\nexport const nekoError = (dispatch: Dispatch, error: string) => {\r\n    booleanError(dispatch, NEKO_ACTION_NAMES, error);\r\n};\r\nexport const nekoSuccess = (dispatch: Dispatch, success: boolean) => {\r\n    booleanSuccess(dispatch, NEKO_ACTION_NAMES, success);\r\n};\r\nexport const nekoClear = (dispatch: Dispatch) => {\r\n    booleanClear(dispatch, NEKO_ACTION_NAMES);\r\n};\r\n","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {IAppStore} from \"../../../../neko-1-main/m-2-bll/store\";\r\nimport {INekoActions, nekoSetName} from \"./b-2-redux/nekoActions\";\r\nimport {NekoAPI} from \"../n-3-dal/NekoAPI\";\r\nimport {getCookie, setCookie} from \"../../../f-2-helpers/h-1-authorization/cookies\";\r\nimport {nekoLoading, nekoError, nekoSuccess} from \"./b-1-callbacks/nekoBooleanCallbacks\";\r\n\r\ntype Return = void;\r\ntype ExtraArgument = {};\r\ntype IGetStore = () => IAppStore;\r\n\r\nexport const getMe = (): ThunkAction<Return, IAppStore, ExtraArgument, INekoActions> =>\r\n    async (dispatch: ThunkDispatch<IAppStore, ExtraArgument, INekoActions>, getStore: IGetStore) => {\r\n        const token = getCookie('token') || '';\r\n\r\n        if (token) {\r\n            nekoLoading(dispatch, true);\r\n\r\n            try {\r\n                const data = await NekoAPI.getMe(token);\r\n                if (data.error) {\r\n                    nekoError(dispatch, data.error);\r\n                    if (data.error === 'bad token!') setCookie('token', '', -1000);\r\n\r\n                    console.log('Neko Get Me Error!', data.error, token);\r\n                } else {\r\n                    setCookie('token', data.token, Math.floor(data.tokenDeathTime / 1000) - 180);\r\n\r\n                    dispatch(nekoSetName(data.name));\r\n                    nekoSuccess(dispatch, true);\r\n\r\n                    console.log('Neko Get Me Success!', data.name)\r\n                }\r\n            } catch (e) {\r\n                nekoError(dispatch, e.response.data.error);\r\n                if (e.response.data.error === 'bad token!') setCookie('token', '', -1000);\r\n\r\n                console.log('Neko Get Me Error!', {...e})\r\n            }\r\n        }\r\n    };\r\n","const reg = /^[\\w][\\w-]*@[\\w-]+\\.[a-z]{2,7}$/i;\r\n\r\nexport const emailValidator = (email: string): boolean => reg.test(email); // true - valid\r\n","export const passwordValidator = (password: string): boolean => password.length > 7; // true - valid\r\n","import {instance} from \"../../../../base-url\";\r\n\r\nexport interface ISignInData {\r\n    name: string;\r\n    token: string;\r\n    tokenDeathTime: number;\r\n\r\n    error: string;\r\n}\r\n\r\nexport const SignInAPI = {\r\n    signIn: async (email: string, password: string, rememberMe: boolean) => {\r\n        const response = await instance.post<ISignInData>('/auth/login', {email, password, rememberMe});\r\n        return response.data;\r\n    },\r\n\r\n};\r\n","export const passwordCoding = (password: string) => {\r\n    let f = '';\r\n    for (let c = 0; c < password.length; c++) {\r\n        f += String.fromCharCode(password.charCodeAt(c) ^ (1 + (password.length - c) % 32));\r\n    }\r\n    return f;\r\n};\r\n","import {ThunkDispatch} from \"redux-thunk\";\r\nimport {IAppStore} from \"../../../../../neko-1-main/m-2-bll/store\";\r\nimport {IBooleanActions} from \"../../../../f-3-common/c-1-boolean-reducer/booleanActions\";\r\nimport {emailValidator} from \"../../../../f-2-helpers/h-1-authorization/emailValidator\";\r\nimport {passwordValidator} from \"../../../../f-2-helpers/h-1-authorization/passwordValidator\";\r\nimport {signIn} from \"../signInThunk\";\r\nimport {signInError} from \"./signInBooleanCallbacks\";\r\n\r\ntype ExtraArgument = {};\r\n\r\nexport const signInCallback = (\r\n    dispatch: ThunkDispatch<IAppStore, ExtraArgument, IBooleanActions>,\r\n    email: string,\r\n    password: string,\r\n    rememberMe: boolean\r\n) => () => {\r\n    if (!emailValidator(email)) {\r\n        signInError(dispatch, 'Email not valid!');\r\n\r\n    } else if (!passwordValidator(password)) {\r\n        signInError(dispatch, 'Password not valid! must be more than 7 characters...');\r\n\r\n    } else {\r\n        dispatch(signIn(email, password, rememberMe));\r\n    }\r\n};\r\n","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {IAppStore} from \"../../../../neko-1-main/m-2-bll/store\";\r\nimport {ISignInActions} from \"./b-2-redux/signInActions\";\r\nimport {SignInAPI} from \"../s-3-dal/SignInAPI\";\r\nimport {passwordCoding} from \"../../../f-2-helpers/h-1-authorization/passwordCoding\";\r\nimport {INekoActions, nekoSetName} from \"../../../f-4-social/s-1-neko/n-2-bll/b-2-redux/nekoActions\";\r\nimport {setCookie} from \"../../../f-2-helpers/h-1-authorization/cookies\";\r\nimport {IBooleanActions} from \"../../../f-3-common/c-1-boolean-reducer/booleanActions\";\r\nimport {signInError, signInLoading, signInSuccess} from \"./b-1-callbacks/signInBooleanCallbacks\";\r\nimport { nekoClear } from \"../../../f-4-social/s-1-neko/n-2-bll/b-1-callbacks/nekoBooleanCallbacks\";\r\n\r\ntype Return = void;\r\ntype ExtraArgument = {};\r\ntype IGetStore = () => IAppStore;\r\n\r\nexport const signIn =\r\n    (email: string, password: string, rememberMe: boolean)\r\n        : ThunkAction<Return, IAppStore, ExtraArgument, ISignInActions> =>\r\n        async (\r\n            dispatch: ThunkDispatch<IAppStore, ExtraArgument, ISignInActions | INekoActions | IBooleanActions>,\r\n            getStore: IGetStore\r\n        ) => {\r\n            nekoClear(dispatch);\r\n            signInLoading(dispatch, true);\r\n\r\n            try {\r\n                const data = await SignInAPI.signIn(email, passwordCoding(password), rememberMe);\r\n\r\n                if (data.error) {\r\n                    signInError(dispatch, data.error);\r\n\r\n                } else {\r\n                    setCookie('token', data.token, Math.floor(data.tokenDeathTime / 1000) - 180);\r\n\r\n                    dispatch(nekoSetName(data.name));\r\n                    signInSuccess(dispatch, true);\r\n\r\n                    console.log('Neko Sign-in Success!', data)\r\n                }\r\n            } catch (e) {\r\n                signInError(dispatch, e.response.data.error);\r\n\r\n                console.log('Neko Sign-in Error!', {...e})\r\n            }\r\n        };\r\n","import {useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useSignInLocalState} from \"./useSignInLocalState\";\r\nimport {useBooleanSelector} from \"../../../../f-3-common/c-1-boolean-reducer/useBooleanSelectors\";\r\nimport {IAppStore} from \"../../../../../neko-1-main/m-2-bll/store\";\r\nimport {NEKO_LOADING, NEKO_SUCCESS} from \"../../../../f-4-social/s-1-neko/n-2-bll/b-2-redux/nekoActions\";\r\nimport {SIGN_IN_ACTION_NAMES} from \"../b-2-redux/signInActions\";\r\nimport {getMe} from \"../../../../f-4-social/s-1-neko/n-2-bll/nekoThunks\";\r\nimport {signInCallback} from \"./signInCallBacks\";\r\n\r\nexport const useSignInContainerLogic = () => {\r\n    // redux\r\n    const [loading, error, success] = useBooleanSelector(SIGN_IN_ACTION_NAMES);\r\n    const [nekoSuccess, nekoLoading] = useBooleanSelector([NEKO_SUCCESS, NEKO_LOADING]);\r\n    const dispatch = useDispatch();\r\n    const {name} = useSelector((store: IAppStore) => store.neko);\r\n\r\n    // local state\r\n    const {\r\n        email, setEmailCallback,\r\n        password, setPasswordCallback,\r\n        rememberMe, setRememberMeCallback,\r\n\r\n        redirect, setRedirect,\r\n    } = useSignInLocalState(dispatch);\r\n\r\n    // useEffects\r\n    useEffect(() => {\r\n        if (!name) dispatch(getMe());\r\n    }, []);\r\n\r\n    // callbacks\r\n    const signIn = signInCallback(dispatch, email, password, rememberMe);\r\n\r\n    return {\r\n        loading, error, success, dispatch,\r\n        nekoSuccess, nekoLoading,\r\n\r\n        email, setEmailCallback,\r\n        password, setPasswordCallback,\r\n        rememberMe, setRememberMeCallback,\r\n\r\n        redirect, setRedirect,\r\n\r\n        signIn,\r\n    }\r\n};\r\n","import {useState} from \"react\";\r\nimport {Dispatch} from \"redux\";\r\nimport {signInClear} from \"./signInBooleanCallbacks\";\r\nimport {useBooleanSelector} from \"../../../../f-3-common/c-1-boolean-reducer/useBooleanSelectors\";\r\nimport {SIGN_IN_ERROR} from \"../b-2-redux/signInActions\";\r\n\r\nexport const useSignInLocalState = (dispatch: Dispatch) => {\r\n    const [email, setEmail] = useState('test@email.nya');\r\n    const [password, setPassword] = useState('test password nya');\r\n    const [rememberMe, setRememberMe] = useState(false);\r\n\r\n    const [redirect, setRedirect] = useState(false);\r\n\r\n    const [error] = useBooleanSelector([SIGN_IN_ERROR]);\r\n\r\n    const setEmailCallback = (emailC: string) => {\r\n        setEmail(emailC);\r\n        error.data.message && signInClear(dispatch);\r\n    };\r\n    const setPasswordCallback = (passwordC: string) => {\r\n        setPassword(passwordC);\r\n        error.data.message && signInClear(dispatch);\r\n    };\r\n    const setRememberMeCallback = (rememberMeC: boolean) => {\r\n        setRememberMe(rememberMeC);\r\n        error.data.message && signInClear(dispatch);\r\n    };\r\n\r\n    return {\r\n        email, setEmailCallback,\r\n        password, setPasswordCallback,\r\n        rememberMe, setRememberMeCallback,\r\n\r\n        redirect, setRedirect,\r\n    }\r\n};\r\n","import {CSSProperties} from \"react\";\r\n\r\nexport const FlexStyle: CSSProperties = {display: 'flex'};\r\nexport const FlexColumn: CSSProperties = {...FlexStyle, flexFlow: 'column'};\r\n\r\nexport const FlexAlignCenter: CSSProperties = {...FlexStyle, alignItems: 'center'};\r\nexport const FlexColumnAlignCenter: CSSProperties = {...FlexColumn, alignItems: 'center'};\r\n\r\nexport const FlexCenterCenter: CSSProperties = {...FlexAlignCenter, justifyContent: 'center'};\r\nexport const FlexColumnCenterCenter: CSSProperties = {...FlexColumnAlignCenter, justifyContent: 'center'};\r\n\r\nexport const FlexAlignCenterSpaceAround: CSSProperties = {...FlexAlignCenter, justifyContent: 'space-around'};\r\nexport const FlexColumnAlignCenterSpaceAround: CSSProperties = {\r\n    ...FlexColumnAlignCenter,\r\n    justifyContent: 'space-around'\r\n};\r\n\r\nexport const FlexAlignCenterSpaceAroundWrap: CSSProperties = {\r\n    ...FlexAlignCenterSpaceAround,\r\n    flexWrap: 'wrap'\r\n};\r\nexport const FlexColumnAlignCenterSpaceAroundWrap: CSSProperties = {\r\n    ...FlexColumnAlignCenterSpaceAround,\r\n    flexWrap: 'wrap'\r\n};\r\n","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {FlexColumnCenterCenter} from \"../../../../neko-3-styles/flex-containers\";\r\nimport {FORGOT_PATH, REGISTER_PATH} from \"../../../../neko-1-main/m-1-ui/Routes\";\r\n\r\ninterface ISignInProps {\r\n    loading: boolean;\r\n    error: string;\r\n    success: boolean;\r\n\r\n    email: string;\r\n    password: string;\r\n    rememberMe: boolean;\r\n\r\n    setEmailCallback: (email: string) => void;\r\n    setPasswordCallback: (password: string) => void;\r\n    setRememberMeCallback: (rememberMe: boolean) => void;\r\n\r\n    signInCallback: () => void;\r\n}\r\n\r\nconst SignIn: React.FC<ISignInProps> = (\r\n    {\r\n        loading, error, success,\r\n\r\n        email, setEmailCallback,\r\n        password, setPasswordCallback,\r\n        rememberMe, setRememberMeCallback,\r\n\r\n        signInCallback\r\n    }\r\n) => {\r\n\r\n    console.log('render SignIn');\r\n    return (\r\n        <div\r\n            style={{\r\n                ...FlexColumnCenterCenter,\r\n                height: '80vh',\r\n            }}\r\n        >\r\n            sign-in\r\n\r\n            {loading\r\n                ? <div style={{color: 'orange'}}>loading...</div>\r\n                : error\r\n                    ? <div style={{color: 'red'}}>{error}</div>\r\n                    : success\r\n                        ? <div style={{color: 'lime'}}>Success!</div>\r\n                        : <div><br/></div>\r\n            }\r\n\r\n            <input value={email} onChange={e => setEmailCallback(e.currentTarget.value)}/>\r\n            <input value={password} onChange={e => setPasswordCallback(e.currentTarget.value)} type={'password'}/>\r\n\r\n            <NavLink to={FORGOT_PATH}>Forgot password?</NavLink>\r\n\r\n            <div>\r\n                <label>\r\n                    <input\r\n                        type={'checkbox'}\r\n                        checked={rememberMe}\r\n                        onChange={e => setRememberMeCallback(e.currentTarget.checked)}\r\n                    />\r\n                    Remember Me\r\n                </label>\r\n            </div>\r\n\r\n            <button onClick={signInCallback} disabled={loading || success}>Sign In</button>\r\n\r\n            <NavLink to={REGISTER_PATH}>Registration</NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignIn;\r\n","import {ThunkDispatch} from \"redux-thunk\";\r\nimport {IAppStore} from \"../../../../../neko-1-main/m-2-bll/store\";\r\nimport {IBooleanActions} from \"../../../../f-3-common/c-1-boolean-reducer/booleanActions\";\r\nimport {INekoActions, nekoSetName} from \"../b-2-redux/nekoActions\";\r\nimport {nekoClear} from \"./nekoBooleanCallbacks\";\r\nimport {setCookie} from \"../../../../f-2-helpers/h-1-authorization/cookies\";\r\n\r\ntype ExtraArgument = {};\r\n\r\nexport const logoutCallback = (\r\n    dispatch: ThunkDispatch<IAppStore, ExtraArgument, IBooleanActions | INekoActions>,\r\n) => () => {\r\n        setCookie('token', '', -1000);\r\n        dispatch(nekoSetName(''));\r\n        nekoClear(dispatch);\r\n};\r\n","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {FlexColumnCenterCenter} from \"../../../../neko-3-styles/flex-containers\";\r\nimport {NEKO_PATH} from \"../../../../neko-1-main/m-1-ui/Routes\";\r\nimport {logoutCallback} from \"../../../f-4-social/s-1-neko/n-2-bll/b-1-callbacks/nekoCallBacks\";\r\n\r\ninterface IDisconnectProps {\r\n\r\n}\r\n\r\nconst Disconnect: React.FC<IDisconnectProps> = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    console.log('render Disconnect');\r\n    return (\r\n        <div\r\n            style={{\r\n                ...FlexColumnCenterCenter,\r\n                height: '80vh',\r\n            }}\r\n        >\r\n            <button onClick={logoutCallback(dispatch)}>logout</button>\r\n            <NavLink to={NEKO_PATH}>Neko Profile</NavLink>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Disconnect;\r\n","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {NEKO_PATH} from \"../../../../neko-1-main/m-1-ui/Routes\";\r\nimport {signInClear} from \"../s-2-bll/b-1-callbacks/signInBooleanCallbacks\";\r\nimport {useSignInContainerLogic} from \"../s-2-bll/b-1-callbacks/useSignInContainerLogic\";\r\nimport SignIn from \"./SignIn\";\r\nimport Disconnect from \"./Disconnect\";\r\n\r\nconst SignInContainer: React.FC = () => {\r\n    const {\r\n        loading, error, success, dispatch,\r\n        nekoSuccess, nekoLoading,\r\n\r\n        email, setEmailCallback,\r\n        password, setPasswordCallback,\r\n        rememberMe, setRememberMeCallback,\r\n\r\n        redirect, setRedirect,\r\n\r\n        signIn,\r\n    } = useSignInContainerLogic();\r\n\r\n    // redirect logic\r\n    if (success.value) setTimeout(() => setRedirect(true), 500);\r\n    if (redirect) {\r\n        setTimeout(() => signInClear(dispatch), 500);\r\n        return <Redirect to={NEKO_PATH}/>;\r\n    }\r\n\r\n    console.log('render SignInContainer');\r\n    if (nekoSuccess.value) return <Disconnect/>;\r\n\r\n    return (\r\n        <SignIn\r\n            loading={loading.value || nekoLoading.value}\r\n            error={error.data.message || ''}\r\n            success={success.value}\r\n\r\n            email={email} setEmailCallback={setEmailCallback}\r\n            password={password} setPasswordCallback={setPasswordCallback}\r\n            rememberMe={rememberMe} setRememberMeCallback={setRememberMeCallback}\r\n\r\n            signInCallback={signIn}\r\n        />\r\n    );\r\n};\r\n\r\nexport default SignInContainer;\r\n","import React from 'react';\r\nimport SignInContainer from \"./SignInContainer\";\r\n\r\nconst SignInPage: React.FC = () => {\r\n    console.log('render SignInPage');\r\n    return (\r\n        <SignInContainer/>\r\n    );\r\n};\r\n\r\nexport default SignInPage;\r\n","import {Dispatch} from \"redux\";\r\nimport {\r\n    booleanClear,\r\n    booleanError,\r\n    booleanLoading,\r\n    booleanSuccess\r\n} from \"../../../../f-3-common/c-1-boolean-reducer/booleanCallbacks\";\r\nimport {REGISTER_ACTION_NAMES} from \"../b-2-redux/registerActions\";\r\n\r\nexport const registerLoading = (dispatch: Dispatch, loading: boolean) => {\r\n    booleanLoading(dispatch, REGISTER_ACTION_NAMES, loading);\r\n};\r\nexport const registerError = (dispatch: Dispatch, error: string) => {\r\n    booleanError(dispatch, REGISTER_ACTION_NAMES, error);\r\n};\r\nexport const registerSuccess = (dispatch: Dispatch, success: boolean) => {\r\n    booleanSuccess(dispatch, REGISTER_ACTION_NAMES, success);\r\n};\r\nexport const registerClear = (dispatch: Dispatch) => {\r\n    booleanClear(dispatch, REGISTER_ACTION_NAMES);\r\n};\r\n","import {instance} from \"../../../../base-url\";\r\n\r\nexport interface IRegisterData {\r\n    success: boolean;\r\n\r\n    error: string;\r\n}\r\n\r\nexport const RegisterAPI = {\r\n    register: async (email: string, password: string) => {\r\n        const response = await instance.post<IRegisterData>('/auth/register', {email, password});\r\n        return response.data;\r\n    },\r\n\r\n};\r\n","import {ThunkDispatch} from \"redux-thunk\";\r\nimport {IAppStore} from \"../../../../../neko-1-main/m-2-bll/store\";\r\nimport {IBooleanActions} from \"../../../../f-3-common/c-1-boolean-reducer/booleanActions\";\r\nimport {emailValidator} from \"../../../../f-2-helpers/h-1-authorization/emailValidator\";\r\nimport {passwordValidator} from \"../../../../f-2-helpers/h-1-authorization/passwordValidator\";\r\nimport {registerError} from \"./registerBooleanCallbacks\";\r\nimport {register} from \"../registerThunk\";\r\n\r\ntype ExtraArgument = {};\r\n\r\nexport const registerCallback = (\r\n    dispatch: ThunkDispatch<IAppStore, ExtraArgument, IBooleanActions>,\r\n    email: string,\r\n    password: string,\r\n    password2: string,\r\n) => () => {\r\n    if (!emailValidator(email)) {\r\n        registerError(dispatch, 'Email not valid!');\r\n\r\n    } else if (!passwordValidator(password)) {\r\n        registerError(dispatch, 'Password not valid! must be more than 7 characters...');\r\n\r\n    } else if (password !== password2) {\r\n        registerError(dispatch,\"Passwords don't match!\");\r\n\r\n    } else {\r\n        dispatch(register(email, password));\r\n    }\r\n};\r\n","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {IAppStore} from \"../../../../neko-1-main/m-2-bll/store\";\r\nimport {IRegisterActions} from \"./b-2-redux/registerActions\";\r\nimport {RegisterAPI} from \"../r-3-dal/RegisterAPI\";\r\nimport {passwordCoding} from \"../../../f-2-helpers/h-1-authorization/passwordCoding\";\r\nimport {registerError, registerLoading, registerSuccess} from \"./b-1-callbacks/registerBooleanCallbacks\";\r\n\r\ntype Return = void;\r\ntype ExtraArgument = {};\r\ntype IGetStore = () => IAppStore;\r\n\r\nexport const register =\r\n    (email: string, password: string): ThunkAction<Return, IAppStore, ExtraArgument, IRegisterActions> =>\r\n        async (dispatch: ThunkDispatch<IAppStore, ExtraArgument, IRegisterActions>, getStore: IGetStore) => {\r\n\r\n            registerLoading(dispatch, true);\r\n\r\n            try {\r\n                const data = await RegisterAPI.register(email, passwordCoding(password));\r\n\r\n                if (data.error) {\r\n                    registerError(dispatch, data.error);\r\n\r\n                } else {\r\n                    registerSuccess(dispatch, true);\r\n\r\n                    console.log('Neko Register Success!', data)\r\n                }\r\n            } catch (e) {\r\n                registerError(dispatch, e.response.data.error);\r\n\r\n                console.log('Neko Register Error!', {...e})\r\n            }\r\n        };\r\n","import {useDispatch} from \"react-redux\";\r\nimport {useBooleanSelector} from \"../../../../f-3-common/c-1-boolean-reducer/useBooleanSelectors\";\r\nimport {useRegisterLocalState} from \"./useRegisterLocalState\";\r\nimport {REGISTER_ACTION_NAMES} from \"../b-2-redux/registerActions\";\r\nimport {registerCallback} from \"./registerCallBacks\";\r\n\r\nexport const useRegisterContainerLogic = () => {\r\n    // redux\r\n    const [loading, error, success] = useBooleanSelector(REGISTER_ACTION_NAMES);\r\n    const dispatch = useDispatch();\r\n\r\n    // local state\r\n    const {\r\n        email, setEmailCallback,\r\n        password, setPasswordCallback,\r\n        password2, setPassword2Callback,\r\n\r\n        redirect, setRedirect,\r\n    } = useRegisterLocalState(dispatch);\r\n\r\n    // useEffects\r\n\r\n\r\n    // callbacks\r\n    const register = registerCallback(dispatch, email, password, password2);\r\n\r\n    return {\r\n        loading, error, success, dispatch,\r\n\r\n        email, setEmailCallback,\r\n        password, setPasswordCallback,\r\n        password2, setPassword2Callback,\r\n\r\n        redirect, setRedirect,\r\n\r\n        register,\r\n    }\r\n};\r\n","import {useState} from \"react\";\r\nimport {Dispatch} from \"redux\";\r\nimport {registerClear} from \"./registerBooleanCallbacks\";\r\nimport {useBooleanSelector} from \"../../../../f-3-common/c-1-boolean-reducer/useBooleanSelectors\";\r\nimport {REGISTER_ERROR} from \"../b-2-redux/registerActions\";\r\n\r\nexport const useRegisterLocalState = (dispatch: Dispatch) => {\r\n    const [email, setEmail] = useState('test@email.nya');\r\n    const [password, setPassword] = useState('test password nya');\r\n    const [password2, setPassword2] = useState('test password nya2');\r\n\r\n    const [redirect, setRedirect] = useState(false);\r\n\r\n    const [error] = useBooleanSelector([REGISTER_ERROR]);\r\n\r\n    const setEmailCallback = (emailC: string) => {\r\n        setEmail(emailC);\r\n        error.data.message && registerClear(dispatch);\r\n    };\r\n    const setPasswordCallback = (passwordC: string) => {\r\n        setPassword(passwordC);\r\n        error.data.message && registerClear(dispatch);\r\n    };\r\n    const setPassword2Callback = (password2C: string) => {\r\n        setPassword2(password2C);\r\n        error.data.message && registerClear(dispatch);\r\n    };\r\n\r\n    return {\r\n        email, setEmailCallback,\r\n        password, setPasswordCallback,\r\n        password2, setPassword2Callback,\r\n\r\n        redirect, setRedirect,\r\n    }\r\n};\r\n","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {FlexColumnCenterCenter} from \"../../../../neko-3-styles/flex-containers\";\r\nimport {SIGN_IN_PATH} from \"../../../../neko-1-main/m-1-ui/Routes\";\r\n\r\ninterface IRegisterProps {\r\n    loading: boolean;\r\n    error: string;\r\n    success: boolean;\r\n\r\n    email: string;\r\n    password: string;\r\n    password2: string;\r\n\r\n    setEmailCallback: (email: string) => void;\r\n    setPasswordCallback: (password: string) => void;\r\n    setPassword2Callback: (password: string) => void;\r\n\r\n    registerCallback: () => void;\r\n}\r\n\r\nconst Register: React.FC<IRegisterProps> = (\r\n    {\r\n        loading, error, success,\r\n\r\n        email, setEmailCallback,\r\n        password, setPasswordCallback,\r\n        password2, setPassword2Callback,\r\n\r\n        registerCallback\r\n    }\r\n) => {\r\n\r\n    console.log('render Register');\r\n    return (\r\n        <div\r\n            style={{\r\n                ...FlexColumnCenterCenter,\r\n                height: '80vh',\r\n            }}\r\n        >\r\n            register\r\n\r\n            {loading\r\n                ? <div style={{color: 'orange'}}>loading...</div>\r\n                : error\r\n                    ? <div style={{color: 'red'}}>{error}</div>\r\n                    : success\r\n                        ? <div style={{color: 'lime'}}>Success!</div>\r\n                        : <div><br/></div>\r\n            }\r\n\r\n            <input value={email} onChange={e => setEmailCallback(e.currentTarget.value)}/>\r\n            <input value={password} onChange={e => setPasswordCallback(e.currentTarget.value)} type={'password'}/>\r\n            <input value={password2} onChange={e => setPassword2Callback(e.currentTarget.value)} type={'password'}/>\r\n\r\n            <button onClick={registerCallback} disabled={loading || success}>Register</button>\r\n\r\n            <NavLink to={SIGN_IN_PATH}>Sign In</NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n","import React from 'react';\r\nimport {Redirect} from \"react-router\";\r\nimport {SIGN_IN_PATH} from \"../../../../neko-1-main/m-1-ui/Routes\";\r\nimport {useRegisterContainerLogic} from '../r-2-bll/b-1-callbacks/useRegisterContainerLogic';\r\nimport {registerClear} from \"../r-2-bll/b-1-callbacks/registerBooleanCallbacks\";\r\nimport Register from './Register';\r\n\r\nconst RegisterContainer: React.FC = () => {\r\n    const {\r\n        loading, error, success, dispatch,\r\n\r\n        email, setEmailCallback,\r\n        password, setPasswordCallback,\r\n        password2, setPassword2Callback,\r\n\r\n        redirect, setRedirect,\r\n\r\n        register,\r\n    } = useRegisterContainerLogic();\r\n\r\n    // redirect logic\r\n    if (success.value) setTimeout(() => setRedirect(true), 500);\r\n    if (redirect) {\r\n        setTimeout(() => registerClear(dispatch), 500);\r\n        return <Redirect to={SIGN_IN_PATH}/>;\r\n    }\r\n\r\n    console.log('render RegisterContainer');\r\n    return (\r\n        <Register\r\n            loading={loading.value}\r\n            error={error.data.message || ''}\r\n            success={success.value}\r\n\r\n            email={email} setEmailCallback={setEmailCallback}\r\n            password={password} setPasswordCallback={setPasswordCallback}\r\n            password2={password2} setPassword2Callback={setPassword2Callback}\r\n\r\n            registerCallback={register}\r\n        />\r\n    );\r\n};\r\n\r\nexport default RegisterContainer;\r\n","import React from 'react';\r\nimport RegisterContainer from \"./RegisterContainer\";\r\n\r\nconst RegisterPage: React.FC = () => {\r\n    console.log('render RegisterPage');\r\n    return (\r\n        <RegisterContainer/>\r\n    );\r\n};\r\n\r\nexport default RegisterPage;\r\n","import {Dispatch} from \"redux\";\r\nimport {\r\n    booleanClear,\r\n    booleanError,\r\n    booleanLoading,\r\n    booleanSuccess\r\n} from \"../../../../f-3-common/c-1-boolean-reducer/booleanCallbacks\";\r\nimport {FORGOT_ACTION_NAMES} from \"../b-2-redux/forgotActions\";\r\n\r\nexport const forgotLoading = (dispatch: Dispatch, loading: boolean) => {\r\n    booleanLoading(dispatch, FORGOT_ACTION_NAMES, loading);\r\n};\r\nexport const forgotError = (dispatch: Dispatch, error: string) => {\r\n    booleanError(dispatch, FORGOT_ACTION_NAMES, error);\r\n};\r\nexport const forgotSuccess = (dispatch: Dispatch, success: boolean) => {\r\n    booleanSuccess(dispatch, FORGOT_ACTION_NAMES, success);\r\n};\r\nexport const forgotClear = (dispatch: Dispatch) => {\r\n    booleanClear(dispatch, FORGOT_ACTION_NAMES);\r\n};\r\n","import { instance } from \"../../../../base-url\";\r\n\r\nexport interface IForgotData {\r\n    success: boolean;\r\n\r\n    error: string;\r\n}\r\n\r\nexport const ForgotAPI = {\r\n    forgot: async (email: string) => {\r\n        const response = await instance.post<IForgotData>('/auth/forgot', {email});\r\n        return response.data;\r\n    },\r\n\r\n};\r\n","import {ThunkDispatch} from \"redux-thunk\";\r\nimport {IAppStore} from \"../../../../../neko-1-main/m-2-bll/store\";\r\nimport {IBooleanActions} from \"../../../../f-3-common/c-1-boolean-reducer/booleanActions\";\r\nimport {emailValidator} from \"../../../../f-2-helpers/h-1-authorization/emailValidator\";\r\nimport {forgotError} from \"./forgotBooleanCallbacks\";\r\nimport {forgot} from \"../forgotThunk\";\r\n\r\ntype ExtraArgument = {};\r\n\r\nexport const forgotCallback = (\r\n    dispatch: ThunkDispatch<IAppStore, ExtraArgument, IBooleanActions>,\r\n    email: string,\r\n) => () => {\r\n    if (!emailValidator(email)) {\r\n        forgotError(dispatch, 'Email not valid!');\r\n\r\n    } else {\r\n        dispatch(forgot(email));\r\n    }\r\n};\r\n","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {IAppStore} from \"../../../../neko-1-main/m-2-bll/store\";\r\nimport {IForgotActions} from \"./b-2-redux/forgotActions\";\r\nimport {ForgotAPI} from \"../f-3-dal/ForgotAPI\";\r\nimport {forgotError, forgotLoading, forgotSuccess} from \"./b-1-callbacks/forgotBooleanCallbacks\";\r\n\r\ntype Return = void;\r\ntype ExtraArgument = {};\r\ntype IGetStore = () => IAppStore;\r\n\r\nexport const forgot = (email: string): ThunkAction<Return, IAppStore, ExtraArgument, IForgotActions> =>\r\n    async (dispatch: ThunkDispatch<IAppStore, ExtraArgument, IForgotActions>, getStore: IGetStore) => {\r\n\r\n        forgotLoading(dispatch, true);\r\n\r\n        try {\r\n            const data = await ForgotAPI.forgot(email);\r\n\r\n            if (data.error) {\r\n                forgotError(dispatch, data.error);\r\n\r\n            } else {\r\n                forgotSuccess(dispatch, true);\r\n\r\n                console.log('Neko Forgot Success!', data)\r\n            }\r\n        } catch (e) {\r\n            forgotError(dispatch, e.response.data.error);\r\n\r\n            console.log('Neko Forgot Error!', {...e})\r\n        }\r\n    };\r\n","import {useDispatch} from \"react-redux\";\r\nimport {useBooleanSelector} from \"../../../../f-3-common/c-1-boolean-reducer/useBooleanSelectors\";\r\nimport {useForgotLocalState} from \"./useForgotLocalState\";\r\nimport {FORGOT_ACTION_NAMES} from \"../b-2-redux/forgotActions\";\r\nimport {forgotCallback} from \"./forgotCallBacks\";\r\n\r\nexport const useForgotContainerLogic = () => {\r\n    // redux\r\n    const [loading, error, success] = useBooleanSelector(FORGOT_ACTION_NAMES);\r\n    const dispatch = useDispatch();\r\n\r\n    // local state\r\n    const {\r\n        email, setEmailCallback,\r\n\r\n        redirect, setRedirect,\r\n    } = useForgotLocalState(dispatch);\r\n\r\n    // useEffects\r\n\r\n\r\n    // callbacks\r\n    const forgot = forgotCallback(dispatch, email);\r\n\r\n    return {\r\n        loading, error, success, dispatch,\r\n\r\n        email, setEmailCallback,\r\n\r\n        redirect, setRedirect,\r\n\r\n        forgot,\r\n    }\r\n};\r\n","import {useState} from \"react\";\r\nimport {Dispatch} from \"redux\";\r\nimport {forgotClear} from \"./forgotBooleanCallbacks\";\r\nimport {useBooleanSelector} from \"../../../../f-3-common/c-1-boolean-reducer/useBooleanSelectors\";\r\nimport {FORGOT_ERROR} from \"../b-2-redux/forgotActions\";\r\n\r\nexport const useForgotLocalState = (dispatch: Dispatch) => {\r\n    const [email, setEmail] = useState('test@email.nya');\r\n\r\n    const [redirect, setRedirect] = useState(false);\r\n\r\n    const [error] = useBooleanSelector([FORGOT_ERROR]);\r\n\r\n    const setEmailCallback = (emailC: string) => {\r\n        setEmail(emailC);\r\n        error.data.message && forgotClear(dispatch);\r\n    };\r\n\r\n    return {\r\n        email, setEmailCallback,\r\n\r\n        redirect, setRedirect,\r\n    }\r\n};\r\n","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {FlexColumnCenterCenter} from \"../../../../neko-3-styles/flex-containers\";\r\nimport {SIGN_IN_PATH} from \"../../../../neko-1-main/m-1-ui/Routes\";\r\n\r\ninterface IForgotProps {\r\n    loading: boolean;\r\n    error: string;\r\n    success: boolean;\r\n\r\n    email: string;\r\n\r\n    setEmailCallback: (email: string) => void;\r\n\r\n    forgotCallback: () => void;\r\n}\r\n\r\nconst Forgot: React.FC<IForgotProps> = (\r\n    {\r\n        loading, error, success,\r\n\r\n        email, setEmailCallback,\r\n\r\n        forgotCallback\r\n    }\r\n) => {\r\n\r\n    console.log('render Forgot');\r\n    return (\r\n        <div\r\n            style={{\r\n                ...FlexColumnCenterCenter,\r\n                height: '80vh',\r\n            }}\r\n        >\r\n            forgot\r\n\r\n            {loading\r\n                ? <div style={{color: 'orange'}}>loading...</div>\r\n                : error\r\n                    ? <div style={{color: 'red'}}>{error}</div>\r\n                    : success\r\n                        ? <div style={{color: 'lime'}}>Success!</div>\r\n                        : <div><br/></div>\r\n            }\r\n\r\n            <input value={email} onChange={e => setEmailCallback(e.currentTarget.value)}/>\r\n\r\n            <button onClick={forgotCallback} disabled={loading || success}>Send email</button>\r\n\r\n            <NavLink to={SIGN_IN_PATH}>Sign In</NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Forgot;\r\n","import React from 'react';\r\nimport {Redirect} from \"react-router\";\r\nimport {SIGN_IN_PATH} from \"../../../../neko-1-main/m-1-ui/Routes\";\r\nimport {useForgotContainerLogic} from \"../f-2-bll/b-1-callbacks/useForgotContainerLogic\";\r\nimport {forgotClear} from \"../f-2-bll/b-1-callbacks/forgotBooleanCallbacks\";\r\nimport Forgot from './Forgot';\r\n\r\nconst ForgotContainer: React.FC = () => {\r\n    const {\r\n        loading, error, success, dispatch,\r\n\r\n        email, setEmailCallback,\r\n\r\n        redirect, setRedirect,\r\n\r\n        forgot,\r\n    } = useForgotContainerLogic();\r\n\r\n    // redirect logic\r\n    if (success.value) setTimeout(() => setRedirect(true), 500);\r\n    if (redirect) {\r\n        setTimeout(() => forgotClear(dispatch), 500);\r\n        return <Redirect to={SIGN_IN_PATH}/>;\r\n    }\r\n\r\n    console.log('render ForgotContainer');\r\n    return (\r\n        <Forgot\r\n            loading={loading.value}\r\n            error={error.data.message || ''}\r\n            success={success.value}\r\n\r\n            email={email} setEmailCallback={setEmailCallback}\r\n\r\n            forgotCallback={forgot}\r\n        />\r\n    );\r\n};\r\n\r\nexport default ForgotContainer;\r\n","import React from 'react';\r\nimport ForgotContainer from './ForgotContainer';\r\n\r\nconst ForgotPage: React.FC = () => {\r\n    console.log('render ForgotPage');\r\n    return (\r\n        <ForgotContainer/>\r\n    );\r\n};\r\n\r\nexport default ForgotPage;\r\n","import {useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useBooleanSelector} from \"../../../../f-3-common/c-1-boolean-reducer/useBooleanSelectors\";\r\nimport {useNekoLocalState} from \"./useNekoLocalState\";\r\nimport {IAppStore} from \"../../../../../neko-1-main/m-2-bll/store\";\r\nimport {NEKO_ACTION_NAMES} from \"../b-2-redux/nekoActions\";\r\nimport {logoutCallback} from \"./nekoCallBacks\";\r\nimport {getMe} from \"../nekoThunks\";\r\nimport {getCookie} from \"../../../../f-2-helpers/h-1-authorization/cookies\";\r\n\r\n\r\nexport const useNekoContainerLogic = () => {\r\n    // redux\r\n    const [loading, error, success] = useBooleanSelector(NEKO_ACTION_NAMES);\r\n    const {name} = useSelector((store: IAppStore) => store.neko);\r\n    const dispatch = useDispatch();\r\n\r\n    // local state\r\n    const {\r\n        show, setShow,\r\n\r\n        redirect, setRedirect,\r\n    } = useNekoLocalState(dispatch);\r\n\r\n    // useEffects\r\n    useEffect(() => {\r\n        if (!name) dispatch(getMe());\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!getCookie('token')) setRedirect(true);\r\n\r\n        else setShow(true);\r\n    }, [name, error]);\r\n\r\n    // callbacks\r\n    const logout = logoutCallback(dispatch);\r\n\r\n    return {\r\n        loading, error, success, dispatch,\r\n        name,\r\n\r\n        show, setShow,\r\n\r\n        redirect, setRedirect,\r\n\r\n        logout,\r\n    }\r\n};\r\n","import {useState} from \"react\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nexport const useNekoLocalState = (dispatch: Dispatch) => {\r\n    const [show, setShow] = useState(false);\r\n\r\n    const [redirect, setRedirect] = useState(false);\r\n\r\n    return {\r\n        show, setShow,\r\n\r\n        redirect, setRedirect,\r\n    }\r\n};\r\n","import React from 'react';\r\nimport {FlexColumnCenterCenter} from \"../../../../neko-3-styles/flex-containers\";\r\n\r\ninterface INekoProps {\r\n    loading: boolean;\r\n    error: string;\r\n\r\n    name: string;\r\n\r\n    logoutCallback: () => void;\r\n}\r\n\r\nconst Neko: React.FC<INekoProps> = (\r\n    {\r\n        loading, error,\r\n\r\n        name,\r\n\r\n        logoutCallback,\r\n    }\r\n) => {\r\n\r\n    console.log('render Neko');\r\n    return (\r\n        <div\r\n            style={{\r\n                ...FlexColumnCenterCenter,\r\n                height: '80vh',\r\n            }}\r\n        >\r\n            neko\r\n\r\n            {loading\r\n                ? <div style={{color: 'orange'}}>loading...</div>\r\n                : error\r\n                    ? <div style={{color: 'red'}}>{error}</div>\r\n                    : name\r\n                        ? <div style={{color: 'lime'}}>{name}</div>\r\n                        : <div><br/></div>\r\n            }\r\n\r\n            <button onClick={logoutCallback} disabled={loading}>logout</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Neko;\r\n","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {SIGN_IN_PATH} from \"../../../../neko-1-main/m-1-ui/Routes\";\r\nimport {useNekoContainerLogic} from \"../n-2-bll/b-1-callbacks/useNekoContainerLogic\";\r\nimport Neko from \"./Neko\";\r\nimport {FlexColumnCenterCenter} from \"../../../../neko-3-styles/flex-containers\";\r\n\r\nconst NekoContainer: React.FC = () => {\r\n    const {\r\n        loading, error, success, dispatch,\r\n        name,\r\n\r\n        show, setShow,\r\n\r\n        redirect, setRedirect,\r\n\r\n        logout,\r\n    } = useNekoContainerLogic();\r\n\r\n    // redirect logic\r\n    if (redirect) {\r\n        return <Redirect to={SIGN_IN_PATH}/>;\r\n    }\r\n\r\n    console.log('render NekoContainer');\r\n    if (!show) return (\r\n        <div\r\n            style={{\r\n                ...FlexColumnCenterCenter,\r\n                height: '80vh',\r\n                color: 'orange',\r\n            }}\r\n        >\r\n            Loading...\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <Neko\r\n            loading={loading.value}\r\n            error={error.data.message || ''}\r\n\r\n            name={name}\r\n\r\n            logoutCallback={logout}\r\n        />\r\n    );\r\n};\r\n\r\nexport default NekoContainer;\r\n","import React from 'react';\r\nimport NekoContainer from \"./NekoContainer\";\r\n\r\nconst NekoPage: React.FC = () => {\r\n    console.log('render NekoPage');\r\n    return (\r\n        <NekoContainer/>\r\n    );\r\n};\r\n\r\nexport default NekoPage;\r\n","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {FlexColumnCenterCenter} from \"../../../../neko-3-styles/flex-containers\";\r\nimport {SIGN_IN_PATH} from \"../../../../neko-1-main/m-1-ui/Routes\";\r\n\r\ninterface ISetNewPassProps {\r\n    loading: boolean;\r\n    error: string;\r\n    success: boolean;\r\n\r\n    password1: string;\r\n    setPassword1Callback: (pass: string) => void;\r\n    password2: string;\r\n    setPassword2Callback: (pass: string) => void;\r\n\r\n    setNewPass: () => void;\r\n}\r\n\r\nconst SetNewPass: React.FC<ISetNewPassProps> = (\r\n    {\r\n        loading, error, success,\r\n\r\n        password1, setPassword1Callback,\r\n        password2, setPassword2Callback,\r\n\r\n        setNewPass\r\n    }\r\n) => {\r\n\r\n    console.log('render SetNewPass');\r\n    return (\r\n        <div\r\n            style={{\r\n                ...FlexColumnCenterCenter,\r\n                height: '80vh',\r\n            }}\r\n        >\r\n            SetNewPass\r\n\r\n            {loading\r\n                ? <div style={{color: 'orange'}}>loading...</div>\r\n                : error\r\n                    ? <div style={{color: 'red'}}>{error}</div>\r\n                    : success\r\n                        ? <div style={{color: 'lime'}}>Success!</div>\r\n                        : <div><br/></div>\r\n            }\r\n\r\n            <input\r\n                value={password1}\r\n                onChange={e => setPassword1Callback(e.currentTarget.value)}\r\n            />\r\n            <input\r\n                value={password2}\r\n                onChange={e => setPassword2Callback(e.currentTarget.value)}\r\n            />\r\n\r\n            <button\r\n                onClick={setNewPass}\r\n                disabled={loading || success}\r\n            >Set new password</button>\r\n\r\n            <NavLink to={SIGN_IN_PATH}>Sign In</NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SetNewPass;\r\n","export const SET_NEW_PASS_LOADING = 'SET_NEW_PASS/LOADING';\r\nexport const SET_NEW_PASS_ERROR = 'SET_NEW_PASS/ERROR';\r\nexport const SET_NEW_PASS_SUCCESS = 'SET_NEW_PASS/SUCCESS';\r\n\r\nexport const SET_NEW_PASS_ACTION_NAMES = [SET_NEW_PASS_LOADING, SET_NEW_PASS_ERROR, SET_NEW_PASS_SUCCESS];\r\n\r\nexport const SET_NEW_PASS_SOME = 'SET_NEW_PASS/SOME';\r\n\r\ninterface ISetNewPassSome { // blank\r\n    type: typeof SET_NEW_PASS_SOME;\r\n\r\n}\r\n\r\nexport type ISetNewPassActions = ISetNewPassSome;\r\n\r\nexport const setNewPassSome = (): ISetNewPassSome => ({ // blank\r\n    type: SET_NEW_PASS_SOME,\r\n\r\n});\r\n","import {Dispatch} from \"redux\";\r\nimport {\r\n    booleanClear,\r\n    booleanError,\r\n    booleanLoading,\r\n    booleanSuccess\r\n} from \"../../../../f-3-common/c-1-boolean-reducer/booleanCallbacks\";\r\nimport {SET_NEW_PASS_ACTION_NAMES} from \"../b-2-redux/setNewPassActions\";\r\n\r\nexport const setNewPassLoading = (dispatch: Dispatch, loading: boolean) => {\r\n    booleanLoading(dispatch, SET_NEW_PASS_ACTION_NAMES, loading);\r\n};\r\nexport const setNewPassError = (dispatch: Dispatch, error: string) => {\r\n    booleanError(dispatch, SET_NEW_PASS_ACTION_NAMES, error);\r\n};\r\nexport const setNewPassSuccess = (dispatch: Dispatch, success: boolean) => {\r\n    booleanSuccess(dispatch, SET_NEW_PASS_ACTION_NAMES, success);\r\n};\r\nexport const setNewPassClear = (dispatch: Dispatch) => {\r\n    booleanClear(dispatch, SET_NEW_PASS_ACTION_NAMES);\r\n};\r\n","import {instance} from \"../../../../base-url\";\r\n\r\nexport interface ISetNewPassData {\r\n    success: boolean;\r\n\r\n    error: string;\r\n}\r\n\r\nexport const SetNewPassAPI = {\r\n    setNewPass: async (password: string, resetPasswordToken: string) => {\r\n        const response = await instance\r\n            .post<ISetNewPassData>('/auth/set-new-password', {password, resetPasswordToken});\r\n        return response.data;\r\n    },\r\n\r\n};\r\n","import {ThunkDispatch} from \"redux-thunk\";\r\nimport {IAppStore} from \"../../../../../neko-1-main/m-2-bll/store\";\r\nimport {IBooleanActions} from \"../../../../f-3-common/c-1-boolean-reducer/booleanActions\";\r\nimport {passwordValidator} from \"../../../../f-2-helpers/h-1-authorization/passwordValidator\";\r\nimport {setNewPassError} from \"./setNewPassBooleanCallbacks\";\r\nimport {setNewPass} from \"../setNewPassThunk\";\r\n\r\ntype ExtraArgument = {};\r\n\r\nexport const setNewPassCallback = (\r\n    dispatch: ThunkDispatch<IAppStore, ExtraArgument, IBooleanActions>,\r\n    token: string,\r\n    password1: string,\r\n    password2: string,\r\n) => () => {\r\n    if (!token) {\r\n        setNewPassError(dispatch, 'No resetPasswordToken!');\r\n\r\n    } else if (password1 !== password2) {\r\n        setNewPassError(dispatch, 'No resetPasswordToken!');\r\n\r\n    } else if (!passwordValidator(password1)) {\r\n        setNewPassError(dispatch, 'Password not valid! must be more than 7 characters...');\r\n\r\n    } else {\r\n        dispatch(setNewPass(password1, token));\r\n    }\r\n};\r\n","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {IAppStore} from \"../../../../neko-1-main/m-2-bll/store\";\r\nimport {passwordCoding} from \"../../../f-2-helpers/h-1-authorization/passwordCoding\";\r\nimport {SetNewPassAPI} from \"../s-3-dal/SetNewPassAPI\";\r\nimport {ISetNewPassActions} from \"./b-2-redux/setNewPassActions\";\r\nimport {setNewPassError, setNewPassLoading, setNewPassSuccess} from \"./b-1-callbacks/setNewPassBooleanCallbacks\";\r\n\r\ntype Return = void;\r\ntype ExtraArgument = {};\r\ntype IGetStore = () => IAppStore;\r\n\r\nexport const setNewPass =\r\n    (password: string, token: string): ThunkAction<Return, IAppStore, ExtraArgument, ISetNewPassActions> =>\r\n        async (dispatch: ThunkDispatch<IAppStore, ExtraArgument, ISetNewPassActions>, getStore: IGetStore) => {\r\n\r\n            setNewPassLoading(dispatch, true);\r\n\r\n            try {\r\n                const data = await SetNewPassAPI.setNewPass(passwordCoding(password), token);\r\n\r\n                if (data.error) {\r\n                    setNewPassError(dispatch, data.error);\r\n\r\n                } else {\r\n                    setNewPassSuccess(dispatch, true);\r\n\r\n                    console.log('Neko setNewPass Success!', data)\r\n                }\r\n            } catch (e) {\r\n                setNewPassError(dispatch, e.response.data.error);\r\n\r\n                console.log('Neko setNewPass Error!', {...e})\r\n            }\r\n        };\r\n","import {useDispatch} from \"react-redux\";\r\nimport {useBooleanSelector} from \"../../../../f-3-common/c-1-boolean-reducer/useBooleanSelectors\";\r\nimport {SET_NEW_PASS_ACTION_NAMES} from \"../b-2-redux/setNewPassActions\";\r\nimport {useSetNewPassLocalState} from \"./useSetNewPassLocalState\";\r\nimport {setNewPassCallback} from \"./setNewPassCallBacks\";\r\n\r\nexport const useSetNewPassContainerLogic = (token: string) => {\r\n    // redux\r\n    const [loading, error, success] = useBooleanSelector(SET_NEW_PASS_ACTION_NAMES);\r\n    const dispatch = useDispatch();\r\n\r\n    // local state\r\n    const {\r\n        password1, setPassword1Callback,\r\n        password2, setPassword2Callback,\r\n\r\n        redirect, setRedirect,\r\n    } = useSetNewPassLocalState(dispatch);\r\n\r\n    // callbacks\r\n    const setNewPass = setNewPassCallback(dispatch, token, password1, password2);\r\n\r\n    return {\r\n        loading, error, success, dispatch,\r\n\r\n        password1, setPassword1Callback,\r\n        password2, setPassword2Callback,\r\n\r\n        redirect, setRedirect,\r\n\r\n        setNewPass,\r\n    }\r\n};\r\n","import {useState} from \"react\";\r\nimport {Dispatch} from \"redux\";\r\nimport {useBooleanSelector} from \"../../../../f-3-common/c-1-boolean-reducer/useBooleanSelectors\";\r\nimport {SET_NEW_PASS_ERROR} from \"../b-2-redux/setNewPassActions\";\r\nimport {setNewPassClear} from \"./setNewPassBooleanCallbacks\";\r\n\r\nexport const useSetNewPassLocalState = (dispatch: Dispatch) => {\r\n    const [password1, setPassword1] = useState('test password nya');\r\n    const [password2, setPassword2] = useState('test password nya');\r\n\r\n    const [redirect, setRedirect] = useState(false);\r\n\r\n    const [error] = useBooleanSelector([SET_NEW_PASS_ERROR]);\r\n\r\n    const setPassword1Callback = (passwordC: string) => {\r\n        setPassword1(passwordC);\r\n        error.data.message && setNewPassClear(dispatch);\r\n    };\r\n    const setPassword2Callback = (passwordC: string) => {\r\n        setPassword2(passwordC);\r\n        error.data.message && setNewPassClear(dispatch);\r\n    };\r\n\r\n    return {\r\n        password1, setPassword1Callback,\r\n        password2, setPassword2Callback,\r\n\r\n        redirect, setRedirect,\r\n    }\r\n};\r\n","import React from 'react';\r\nimport SetNewPass from \"./SetNewPass\";\r\nimport {useParams, Redirect} from \"react-router-dom\";\r\nimport {useSetNewPassContainerLogic} from \"../s-2-bll/b-1-callbacks/useSetNewPassContainerLogic\";\r\nimport {setNewPassClear} from \"../s-2-bll/b-1-callbacks/setNewPassBooleanCallbacks\";\r\nimport {SIGN_IN_PATH} from \"../../../../neko-1-main/m-1-ui/Routes\";\r\n\r\nconst SetNewPassContainer: React.FC = () => {\r\n    const {token} = useParams();\r\n    const {\r\n        loading, error, success, dispatch,\r\n\r\n        password1, setPassword1Callback,\r\n        password2, setPassword2Callback,\r\n\r\n        redirect, setRedirect,\r\n\r\n        setNewPass,\r\n    } = useSetNewPassContainerLogic(token || '');\r\n\r\n    // redirect logic\r\n    if (success.value) setTimeout(() => setRedirect(true), 500);\r\n    if (redirect) {\r\n        setTimeout(() => setNewPassClear(dispatch), 500);\r\n        return <Redirect to={SIGN_IN_PATH}/>;\r\n    }\r\n\r\n    console.log('render SetNewPassContainer');\r\n    return (\r\n        <SetNewPass\r\n            loading={loading.value}\r\n            error={error.data.message || ''}\r\n            success={success.value}\r\n\r\n            password1={password1} setPassword1Callback={setPassword1Callback}\r\n            password2={password2} setPassword2Callback={setPassword2Callback}\r\n\r\n            setNewPass={setNewPass}\r\n\r\n        />\r\n    );\r\n};\r\n\r\nexport default SetNewPassContainer;\r\n","import React from 'react';\r\nimport SetNewPassContainer from \"./SetNewPassContainer\";\r\n\r\nconst SetNewPassPage: React.FC = () => {\r\n    console.log('render SetNewPassPage');\r\n    return (\r\n        <SetNewPassContainer/>\r\n    );\r\n};\r\n\r\nexport default SetNewPassPage;\r\n","import React from 'react';\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport SignInPage from '../../neko-2-features/f-1-authorization/a-1-sign-in/s-1-ui/SignInPage';\r\nimport RegisterPage\r\n    from '../../neko-2-features/f-1-authorization/a-2-register/r-1-ui/RegisterPage';\r\nimport ForgotPage from '../../neko-2-features/f-1-authorization/a-3-forgot/f-1-ui/ForgotPage';\r\nimport NekoPage from \"../../neko-2-features/f-4-social/s-1-neko/n-1-ui/NekoPage\";\r\nimport SetNewPassPage from \"../../neko-2-features/f-1-authorization/a-4-set-new-pass/s-1-ui/SetNewPassPage\";\r\n\r\n// all project paths\r\nexport const SIGN_IN_PATH = '/sign-in';\r\nexport const REGISTER_PATH = '/register';\r\nexport const FORGOT_PATH = '/forgot';\r\nexport const SET_NEW_PASS_PATH = '/set-new-password';\r\n\r\nexport const NEKO_PATH = '/neko'; // profile\r\n\r\nconst Routes: React.FC = () => {\r\n    return (\r\n        <Switch>\r\n            <Route exact path={'/'} render={() => <Redirect to={SIGN_IN_PATH}/>}/>\r\n\r\n            <Route path={SIGN_IN_PATH} render={() => <SignInPage/>}/>\r\n            <Route path={REGISTER_PATH} render={() => <RegisterPage/>}/>\r\n            <Route path={FORGOT_PATH} render={() => <ForgotPage/>}/>\r\n            <Route path={SET_NEW_PASS_PATH + '/:token'} render={() => <SetNewPassPage/>}/>\r\n            <Route path={SET_NEW_PASS_PATH} render={() => <SetNewPassPage/>}/>\r\n\r\n            <Route path={NEKO_PATH} render={() => <NekoPage/>}/>\r\n\r\n            <Route render={() => <Redirect to={SIGN_IN_PATH}/>}/>\r\n        </Switch>\r\n    );\r\n};\r\n\r\nexport default Routes;\r\n","import React, {useState} from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {\r\n    SIGN_IN_PATH, REGISTER_PATH, FORGOT_PATH,\r\n    NEKO_PATH,\r\n    SET_NEW_PASS_PATH\r\n} from './Routes';\r\nimport {FlexAlignCenterSpaceAroundWrap} from \"../../neko-3-styles/flex-containers\";\r\n\r\nconst Header: React.FC = () => {\r\n    const [show, setShow] = useState(false);\r\n\r\n    return (\r\n        <div style={{...FlexAlignCenterSpaceAroundWrap}}>\r\n            <button onClick={() => setShow(!show)}>{show ? 'hide dev header' : 'show dev header'}</button>\r\n\r\n            {show && <NavLink to={SIGN_IN_PATH}>sign-in</NavLink>}\r\n            {show && <NavLink to={REGISTER_PATH}>register</NavLink>}\r\n            {show && <NavLink to={FORGOT_PATH}>forgot</NavLink>}\r\n            {show && <NavLink to={SET_NEW_PASS_PATH}>set-new-pass</NavLink>}\r\n\r\n            {show && <NavLink to={NEKO_PATH}>neko</NavLink>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport Routes from \"./Routes\";\r\n\r\n// headers, routes, footers\r\nconst Main: React.FC = () => {\r\n    return (\r\n        <>\r\n            <Header/>\r\n\r\n            <Routes/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport './App.css';\r\nimport store from \"./neko-1-main/m-2-bll/store\";\r\nimport Main from \"./neko-1-main/m-1-ui/Main\";\r\n\r\n// add context\r\nconst App: React.FC = () => {\r\n    return (\r\n        <div className=\"App\">\r\n            <HashRouter>\r\n                <Provider store={store}>\r\n                    <Main/>\r\n                </Provider>\r\n            </HashRouter>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}